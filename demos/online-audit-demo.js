/**
 * Online Audit System Demo
 * ‡∏™‡∏≤‡∏ò‡∏¥‡∏ï‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå
 */

const { OnlineAuditSystem } = require('../services/online-audit-system');

class OnlineAuditDemo {
    constructor() {
        this.auditSystem = new OnlineAuditSystem();
        this.demoData = this.prepareDemoData();
    }

    prepareDemoData() {
        return {
            farmer: {
                farmer_id: 'FARMER_001',
                name: '‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ',
                farm_name: '‡∏ü‡∏≤‡∏£‡πå‡∏°‡∏™‡∏°‡∏∏‡∏ô‡πÑ‡∏û‡∏£‡πÉ‡∏à‡∏î‡∏µ',
                location: '‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà',
                farm_size: '2.5 ‡πÑ‡∏£‡πà',
                herbs: ['‡∏Ç‡∏¥‡∏á', '‡∏Ç‡∏°‡∏¥‡πâ‡∏ô', '‡πÑ‡∏û‡∏•']
            },
            auditor: {
                auditor_id: 'AUDITOR_001',
                name: '‡∏î‡∏£.‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö',
                certification: 'GACP Certified Auditor',
                experience: '5 ‡∏õ‡∏µ'
            },
            application: {
                application_id: 'GACP-2025-ONLINE-001',
                submitted_date: '2025-09-25',
                farm_coordinates: '18.7883,98.9853',
                audit_type: 'ONLINE_FIRST_ASSESSMENT'
            }
        };
    }

    async runFullDemo() {
        console.log('üåø ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏≤‡∏ò‡∏¥‡∏ï GACP Online Audit System');
        console.log('=' .repeat(60));

        try {
            // Step 1: ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå
            console.log('\nüìã Step 1: ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå');
            const initResult = await this.auditSystem.initiateOnlineAudit(
                this.demoData.application.application_id,
                this.demoData.auditor.auditor_id,
                this.demoData.farmer
            );

            console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Session ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:');
            console.log(`   Session ID: ${initResult.session_id}`);
            console.log(`   Zoom Meeting: ${initResult.zoom_meeting_id}`);
            console.log(`   Join URL: ${initResult.zoom_meeting_url}`);
            console.log(`   Checklist Items: ${initResult.assessment_checklist.length}`);

            const sessionId = initResult.session_id;

            // Step 2: ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏à‡∏∏‡∏î
            console.log('\nüîç Step 2: ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏à‡∏∏‡∏î SOP');
            await this.simulateCheckpointAssessments(sessionId);

            // Step 3: ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô
            console.log('\nüìä Step 3: ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô');
            const assessmentResult = await this.auditSystem.calculateAssessmentResult(sessionId);
            this.displayAssessmentResult(assessmentResult);

            // Step 4: ‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ
            console.log('\nüéØ Step 4: ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ');
            await this.demonstrateDecisionMaking(sessionId);

            // Step 5: ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•
            console.log('\nüìë Step 5: ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô');
            this.displaySessionSummary(sessionId);

        } catch (error) {
            console.error('‚ùå Error in demo:', error.message);
        }
    }

    async simulateCheckpointAssessments(sessionId) {
        const session = this.auditSystem.getAuditSession(sessionId);
        const checkpoints = session.sop_checklist;

        console.log(`üìù ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô ${checkpoints.length} ‡∏à‡∏∏‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö`);

        for (let i = 0; i < checkpoints.length; i++) {
            const checkpoint = checkpoints[i];
            
            // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô (80% ‡∏ú‡πà‡∏≤‡∏ô, 10% ‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô, 10% ‡∏ô‡πà‡∏≤‡∏™‡∏á‡∏™‡∏±‡∏¢)
            let status = 'PASS';
            let notes = '‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô';
            
            const random = Math.random();
            if (random < 0.1) {
                status = 'FAIL';
                notes = '‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡∏ï‡∏≤‡∏°‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô ‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á';
            } else if (random < 0.2) {
                status = 'SUSPICIOUS';
                notes = '‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏™‡∏á‡∏™‡∏±‡∏¢ ‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°';
            }

            // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ñ‡πà‡∏≤‡∏¢‡∏£‡∏π‡∏õ
            await this.simulatePhotoCapture(sessionId, checkpoint.checkpoint_id);

            // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô
            const updateResult = await this.auditSystem.updateCheckpoint(
                sessionId, 
                checkpoint.checkpoint_id, 
                {
                    status: status,
                    notes: notes,
                    photos: [`PHOTO_${checkpoint.checkpoint_id}_${Date.now()}`]
                }
            );

            console.log(`   ${this.getStatusIcon(status)} ${checkpoint.item} - ${status}`);
            if (notes) {
                console.log(`     üí¨ ${notes}`);
            }

            // ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤
            if ((i + 1) % 5 === 0 || i === checkpoints.length - 1) {
                console.log(`     üìä ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤: ${updateResult.progress}%`);
            }
        }
    }

    async simulatePhotoCapture(sessionId, checkpointId) {
        // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
        const photoData = {
            fileName: `evidence_${checkpointId}.jpg`,
            fileSize: 1024 * 500, // 500KB
            mimeType: 'image/jpeg',
            notes: '‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö'
        };

        await this.auditSystem.uploadPhotoEvidence(sessionId, checkpointId, photoData);
    }

    displayAssessmentResult(result) {
        console.log('üìä ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô:');
        console.log(`   ‚úÖ ‡∏ú‡πà‡∏≤‡∏ô: ${result.passed_checkpoints} ‡∏à‡∏∏‡∏î`);
        console.log(`   ‚ùå ‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô: ${result.failed_checkpoints} ‡∏à‡∏∏‡∏î`);
        console.log(`   ‚ö†Ô∏è  ‡∏ô‡πà‡∏≤‡∏™‡∏á‡∏™‡∏±‡∏¢: ${result.suspicious_checkpoints} ‡∏à‡∏∏‡∏î`);
        console.log(`   üèÜ ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏£‡∏ß‡∏°: ${result.overall_score.toFixed(1)} ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô`);

        console.log('\nüìà ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î:');
        Object.keys(result.category_scores).forEach(categoryKey => {
            const category = result.category_scores[categoryKey];
            console.log(`   üìÇ ${category.name}: ${category.score.toFixed(1)}/${category.weight} ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô (${category.passed}/${category.total})`);
        });

        console.log(`\nüéØ ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö: ${this.getDecisionText(result.decision)}`);
        console.log(`üîÑ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ: ${this.getNextActionText(result.next_action)}`);

        if (result.suspicious_items && result.suspicious_items.length > 0) {
            console.log('\n‚ö†Ô∏è  ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏™‡∏á‡∏™‡∏±‡∏¢:');
            result.suspicious_items.forEach(item => {
                console.log(`   - ${item.item}: ${item.notes}`);
            });
        }

        if (result.failed_required_items && result.failed_required_items.length > 0) {
            console.log('\n‚ùå ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô:');
            result.failed_required_items.forEach(item => {
                console.log(`   - ${item.item}: ${item.notes}`);
            });
        }
    }

    async demonstrateDecisionMaking(sessionId) {
        const assessmentResult = await this.auditSystem.calculateAssessmentResult(sessionId);
        
        let auditorDecision;
        
        // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
        if (assessmentResult.failed_checkpoints === 0 && assessmentResult.suspicious_checkpoints === 0) {
            auditorDecision = {
                action: 'APPROVE_IMMEDIATELY',
                reasoning: '‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏ó‡∏∏‡∏Å‡∏à‡∏∏‡∏î ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏™‡∏á‡∏™‡∏±‡∏¢',
                confidence_level: 'HIGH'
            };
        } else if (assessmentResult.suspicious_checkpoints > 0) {
            if (Math.random() > 0.5) {
                auditorDecision = {
                    action: 'SCHEDULE_ONLINE_FOLLOWUP',
                    reasoning: '‡∏°‡∏µ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏™‡∏á‡∏™‡∏±‡∏¢ ‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏µ‡πâ‡πÅ‡∏à‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏ú‡πà‡∏≤‡∏ô Video Call',
                    confidence_level: 'MEDIUM'
                };
            } else {
                auditorDecision = {
                    action: 'SCHEDULE_FIELD_AUDIT',
                    reasoning: '‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏•‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏†‡∏≤‡∏Ñ‡∏™‡∏ô‡∏≤‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô',
                    confidence_level: 'LOW'
                };
            }
        } else {
            auditorDecision = {
                action: 'REJECT_APPLICATION',
                reasoning: '‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏Å‡∏ì‡∏ë‡πå',
                confidence_level: 'HIGH'
            };
        }

        console.log('üéØ ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö:');
        console.log(`   üìã ‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£: ${this.getActionText(auditorDecision.action)}`);
        console.log(`   üí≠ ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•: ${auditorDecision.reasoning}`);
        console.log(`   üìä ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏±‡πà‡∏ô: ${auditorDecision.confidence_level}`);

        // ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à
        const decisionResult = await this.auditSystem.makeAuditDecision(sessionId, auditorDecision);

        console.log('\n‚úÖ ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à:');
        console.log(`   üéØ ‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢: ${decisionResult.decision.final_action}`);
        console.log(`   üìù ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•: ${decisionResult.decision.reasoning}`);
        
        console.log('\nüìã ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏õ:');
        decisionResult.decision.next_steps.forEach((step, index) => {
            console.log(`   ${index + 1}. ${step}`);
        });

        // ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ
        if (auditorDecision.action === 'SCHEDULE_ONLINE_FOLLOWUP' || 
            auditorDecision.action === 'SCHEDULE_FIELD_AUDIT') {
            await this.demonstrateFollowUpScheduling(sessionId, auditorDecision.action);
        }

        return decisionResult;
    }

    async demonstrateFollowUpScheduling(sessionId, followUpType) {
        console.log(`\nüìÖ ‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢${followUpType === 'SCHEDULE_ONLINE_FOLLOWUP' ? '‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå' : '‡∏•‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà'}:`);
        
        const proposedDates = [
            '2025-10-05T09:00:00.000Z',
            '2025-10-06T14:00:00.000Z',
            '2025-10-07T10:00:00.000Z'
        ];

        const followUpResult = await this.auditSystem.scheduleFollowUp(
            sessionId, 
            followUpType === 'SCHEDULE_ONLINE_FOLLOWUP' ? 'ONLINE_MEETING' : 'FIELD_AUDIT',
            proposedDates
        );

        console.log(`   üìù Follow-up ID: ${followUpResult.followup_id}`);
        console.log(`   üìã ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó: ${followUpResult.type}`);
        
        if (followUpResult.zoom_meeting) {
            console.log(`   üîó Zoom Meeting: ${followUpResult.zoom_meeting.id}`);
        }
        
        console.log(`   üéØ ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ô‡πâ‡∏ô: ${followUpResult.focus_areas.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
        console.log('   üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏ô‡∏≠:');
        proposedDates.forEach((date, index) => {
            console.log(`      ${index + 1}. ${new Date(date).toLocaleString('th-TH')}`);
        });
    }

    displaySessionSummary(sessionId) {
        const session = this.auditSystem.getAuditSession(sessionId);
        
        console.log('üìë ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå:');
        console.log('=' .repeat(60));
        
        console.log(`üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ã‡∏™‡∏ä‡∏±‡∏ô:`);
        console.log(`   üÜî Session ID: ${session.session_id}`);
        console.log(`   üåæ ‡πÄ‡∏Å‡∏©‡∏ï‡∏£‡∏Å‡∏£: ${session.farmer_data.name}`);
        console.log(`   üë®‚Äçüíº ‡∏ú‡∏π‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö: ${this.demoData.auditor.name}`);
        console.log(`   ‚è∞ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô: ${new Date(session.start_time).toLocaleString('th-TH')}`);
        console.log(`   ‚è±Ô∏è  ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î: ${new Date(session.end_time).toLocaleString('th-TH')}`);
        
        const duration = this.auditSystem.calculateSessionDuration(session.start_time, session.end_time);
        console.log(`   üïê ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤: ${duration.display}`);

        console.log(`\nüìä ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô:`);
        console.log(`   üìù ‡∏à‡∏∏‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${session.sop_checklist.length}`);
        console.log(`   ‚úÖ ‡∏ú‡πà‡∏≤‡∏ô: ${session.sop_checklist.filter(cp => cp.status === 'PASS').length}`);
        console.log(`   ‚ùå ‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô: ${session.sop_checklist.filter(cp => cp.status === 'FAIL').length}`);
        console.log(`   ‚ö†Ô∏è  ‡∏ô‡πà‡∏≤‡∏™‡∏á‡∏™‡∏±‡∏¢: ${session.sop_checklist.filter(cp => cp.status === 'SUSPICIOUS').length}`);
        console.log(`   üì∑ ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô: ${session.photo_evidence.length} ‡∏£‡∏π‡∏õ`);

        if (session.final_decision) {
            console.log(`\nüéØ ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢:`);
            console.log(`   üìã ‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£: ${session.final_decision.final_action}`);
            console.log(`   üí≠ ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•: ${session.final_decision.reasoning}`);
        }

        console.log(`\nüåü ‡∏Ç‡πâ‡∏≠‡∏î‡∏µ‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå:`);
        console.log(`   ‚ö° ‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏•‡∏∞‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢`);
        console.log(`   üåç ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ‡∏ó‡∏∏‡∏Å‡∏ó‡∏µ‡πà`);
        console.log(`   üìã ‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö SOP ‡∏ó‡∏µ‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô`);
        console.log(`   üì∑ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô`);
        console.log(`   üéØ ‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö`);
        
        console.log('\nüéâ ‡∏Å‡∏≤‡∏£‡∏™‡∏≤‡∏ò‡∏¥‡∏ï‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!');
    }

    // Helper methods
    getStatusIcon(status) {
        const icons = {
            'PASS': '‚úÖ',
            'FAIL': '‚ùå',
            'SUSPICIOUS': '‚ö†Ô∏è',
            'PENDING': '‚è≥'
        };
        return icons[status] || '‚ùì';
    }

    getDecisionText(decision) {
        const texts = {
            'APPROVED': '‚úÖ ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥',
            'REQUIRES_VERIFICATION': '‚ö†Ô∏è ‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°',
            'REQUIRES_IMPROVEMENT': 'üîÑ ‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á',
            'FAILED': '‚ùå ‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏Å‡∏ì‡∏ë‡πå',
            'ASSESSMENT_INCOMPLETE': '‚è≥ ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏£‡πá‡∏à'
        };
        return texts[decision] || decision;
    }

    getNextActionText(action) {
        const texts = {
            'ISSUE_CERTIFICATE': 'üìú ‡∏≠‡∏≠‡∏Å‡πÉ‡∏ö‡∏£‡∏±‡∏ö‡∏£‡∏≠‡∏á',
            'SCHEDULE_FOLLOWUP': 'üìÖ ‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°',
            'SCHEDULE_REAUDIT': 'üîÑ ‡∏ô‡∏±‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏ã‡πâ‡∏≥',
            'REJECT_APPLICATION': '‚ùå ‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£',
            'CONTINUE_ASSESSMENT': '‚ñ∂Ô∏è ‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏ï‡πà‡∏≠'
        };
        return texts[action] || action;
    }

    getActionText(action) {
        const texts = {
            'APPROVE_IMMEDIATELY': '‚úÖ ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡∏ô‡∏ó‡∏µ',
            'SCHEDULE_ONLINE_FOLLOWUP': 'üíª ‡∏ô‡∏±‡∏î‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°',
            'SCHEDULE_FIELD_AUDIT': 'üöó ‡∏•‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö',
            'REJECT_APPLICATION': '‚ùå ‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£'
        };
        return texts[action] || action;
    }
}

// ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏≤‡∏ò‡∏¥‡∏ï
async function runDemo() {
    const demo = new OnlineAuditDemo();
    await demo.runFullDemo();
}

// Export for testing
module.exports = { OnlineAuditDemo, runDemo };

// ‡∏£‡∏±‡∏ô‡∏ñ‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
if (require.main === module) {
    runDemo().catch(console.error);
}