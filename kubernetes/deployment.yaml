# kubernetes/deployment.yaml
# GACP Platform Kubernetes Deployment Configuration
# Thai Herbal Certification System - Production Environment

apiVersion: apps/v1
kind: Deployment
metadata:
  name: gacp-core-certification
  namespace: gacp-production
  labels:
    app: core-certification
    version: v3.0.0
    component: api-server
    part-of: gacp-platform
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: core-certification
  template:
    metadata:
      labels:
        app: core-certification
        version: v3.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3001"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: gacp-core-certification
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: core-certification
        image: gcr.io/gacp-project/core-certification:v3.0.0
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3001
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3001"
        - name: USE_ADVANCED_SERVICE
          value: "true"
        
        # Database Configuration
        - name: POSTGRESQL_URI
          valueFrom:
            secretKeyRef:
              name: gacp-db-secret
              key: postgresql-uri
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: gacp-db-secret
              key: mongodb-uri
        - name: REDIS_URI
          valueFrom:
            secretKeyRef:
              name: gacp-db-secret
              key: redis-uri
        
        # Security Configuration
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: gacp-security-secret
              key: jwt-secret
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: gacp-security-secret
              key: encryption-key
        
        # Thai-specific Configuration
        - name: DEFAULT_TIMEZONE
          value: "Asia/Bangkok"
        - name: DEFAULT_LANGUAGE
          value: "th-TH"
        - name: SUPPORTED_PROVINCES
          value: "all"
        
        # Monitoring Configuration
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: gacp-monitoring-secret
              key: sentry-dsn
              optional: true
        
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        
        # Health Checks
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        
        # Startup Probe for slow-starting container
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 10
        
        # Security Context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - ALL
        
        # Volume Mounts for logs and temp files
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /app/logs
      
      # Volumes
      volumes:
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
      
      # Image Pull Secrets
      imagePullSecrets:
      - name: gcr-json-key
      
      # Node Selection (prefer nodes with SSD)
      nodeSelector:
        kubernetes.io/arch: amd64
        node-type: application
      
      # Tolerations for dedicated nodes
      tolerations:
      - key: "dedicated"
        operator: "Equal"
        value: "gacp-apps"
        effect: "NoSchedule"

---

# Service Configuration
apiVersion: v1
kind: Service
metadata:
  name: core-certification-service
  namespace: gacp-production
  labels:
    app: core-certification
    component: api-server
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
spec:
  type: ClusterIP
  selector:
    app: core-certification
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: http
  sessionAffinity: None

---

# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: gacp-core-certification-hpa
  namespace: gacp-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: gacp-core-certification
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60

---

# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: gacp-core-certification-pdb
  namespace: gacp-production
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: core-certification

---

# Network Policy for Security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: gacp-core-certification-netpol
  namespace: gacp-production
spec:
  podSelector:
    matchLabels:
      app: core-certification
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: gacp-production
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 3001
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: gacp-database
    ports:
    - protocol: TCP
      port: 5432  # PostgreSQL
    - protocol: TCP
      port: 27017 # MongoDB
    - protocol: TCP
      port: 6379  # Redis
  - to: []
    ports:
    - protocol: TCP
      port: 53    # DNS
    - protocol: UDP
      port: 53    # DNS
    - protocol: TCP
      port: 443   # HTTPS outbound